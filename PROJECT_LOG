Backlog: 
    * Need worker to be able to advance through some of the case scenarios.
    * How does the "customer" respond? 
    * We'll definitely need a database.
    * Somepoint a frontend will be good to have. It should be able to display the workers.
    * Need a service to keep track of the cases. Some sort of a document database?
    * At some point we're going to need to write tests. 


Stage 1: Scenario 1 - Manual assign some cases
    * Be able to generate cases
    * Manual assign cases (Don't need auto assign yet.)
    * Workers work through a case
    * View cases and workers on a frontend - so we actually can do some assign 

Day 8 (Oct.20) 
    * Figured out how to spawn workers from the API
    * Need to start writing tests. Maybe some integration tests? 

Day 7 (Oct.19) 
    * 23:12, can't sleep so let's get up and implement the case generate workflow! :)
    * Woohoo! Can make flutter reach the backend (API server) and create cases now! 
    * Had to disable CORS via this: https://stackoverflow.com/a/66879350/1322998. When we go to prod we'll need to figure out a way to work with CORS :(


Day 6 (Oct.18)
    * Yay finally figured out how to use flutter to create new cards, populating its contents with a Future<>
    * This means we now know how to "create new cases"! 

Day 5 (Oct.15)
    * Yay we can have workers get streaming RPC from the server! 
    * Should probably write some tests at this point. 


Day 4 (Oct.14)
    * Spent the last couple of days fighting with importing generated go code from proto. That was surprisingly difficult. 
    * Lesson learned: package name of the .proto doesn't really matter. What does matter is the go_import, that's the folder that it's in.


Day 3 (Oct.11)
    * Wanted to get to a UI, but instead made some parts of the API layer.
    * Thought about game engines. Maybe need to do unity. There's also this framework: https://love2d.org/, not sure if worth. Can also consider Construct 3
        * I need the game engine to draw characters. But that might be able to be done with just simple animation
            * Might also need panning and zooming, not sure if flutter can just do that. 
    * Starting learning a little about grpc. 


Day 2 (Oct.8): Did some tutorials on flutter and dart. Not sure I completely understand it all. 
    Flutter seems to be writing dart with a bunch of UI stuff peppered in. But seems to be kinda bloaty. 
    Watched this tutorial on flutter/dart + go + rpc. Super useful: https://www.youtube.com/watch?v=Vd9sV8_uDrQ


Day 1 (Oct.7): Stubbed out a master clock and worker. 
    Master clock can now tick on whatever is registered with it 
        Basically every X seconds send a url request to its /tick
