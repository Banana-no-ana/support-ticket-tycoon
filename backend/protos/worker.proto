//Define relationship between worker and api.
//Worker is its own server, listening for actions from the server. 
syntax = "proto3";

option go_package = "github.com/Banana-no-ana/support-ticket-tycoon/backend/protos";
package worker;


message Case {
    int32 caseID =1 ;  
}

message Response {
    bool Success = 1; 
}

message CaseState {
    int32 currentStage = 1; //What is the worker currently working on.
    repeated CaseStage Stage = 2; 
    string Status = 3; // Case status Assigne, started, etc.     
}

message CaseStage {
    int32 StageID = 1; 
    string Type = 2; 
    string Status = 3; //Completed, vs In-progress 
    int32  Difficulty = 4; //1-5 corresponding to the worker belts. 
    int32  Totalwork = 5; //Total amount of work to be done. triage and comms have less work, while research has more. 
    int32  Completedwork = 6; //How much work has been compelted so far.   
}


message WorkerSkill {
    int32 Troubleshoot = 1;
    int32 Build = 2;
    int32 Tech = 3;

    int32 Usage = 4; 
    int32 Architecture = 5; 
    int32 Environment = 6; 

    int32 Explain = 7; 
    int32 Empathy = 8;
    int32 Relationship = 9; 
}

service Worker{
    rpc Assign(Case) returns (Response);
    rpc Unassign(Case) returns (Response); 
    rpc SetWorkerSkills(WorkerSkill) returns (Response); 
    rpc Hello(Response) returns (Response); 
    rpc GetCaseState(Case) returns (stream CaseState); 
    rpc KillWorker(Response) returns (Response); 
}
